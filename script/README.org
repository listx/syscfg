#+TITLE: System scripts
#+AUTHOR: Linus Arver
#+PROPERTY: header-args :noweb no-export
#+auto_tangle: t

* Introduction

This Org file houses various scripts we rely on. Each main heading holds a
single script.

** Literate style

See the discussion for [[file:~/syscfg/tmux/README.org][the literate tmux configuration]] about how we use literate
programming in this file. We use the same conventions used there.

* Linters

  - [[file:find-long-lines.org]] :: Detect long lines in Org mode files that could
    probably be reflowed to be under 100 columns.

* Test runner

This script just imports all Clojure test files and then runs them.

#+header: :shebang #!/usr/bin/env bb
#+header: :noweb-ref test-runner
#+header: :tangle test-runner.clj
#+begin_src clojure
(require '[clojure.test :refer [run-tests]]
         '[babashka.classpath :refer [add-classpath]])

(add-classpath ".")

(require 'find-long-lines-test
         'prepare-commit-msg-test)

(def test-results
  (run-tests 'find-long-lines-test
             'prepare-commit-msg-test))

(let [{:keys [fail error]} test-results]
  (when (pos? (+ fail error))
    (System/exit 1)))
#+end_src

* Clojure project settings

#+header: :tangle bb.edn
#+begin_src clojure
{
 :deps
 {
 <<dependencies>>
 }
 :paths
 [
 <<paths>>
 ]
}
#+end_src

** Dependencies

*** medley

[[https://github.com/weavejester/medley][Medley]] is "[a] small collection of useful, mostly pure functions that might not
look out of place in the clojure.core namespace".

We don't use =medley= yet but it's there just as a demonstration of how
dependencies can be declared in Clojure.

#+header: :noweb-ref dependencies
#+begin_src clojure
dev.weavejester/medley {:mvn/version "1.8.1"}
#+end_src

** Paths

We have to declare all paths where our Babashka files (and their tests) live.
This is needed for running [[file:test-runner.clj]].

#+header: :noweb-ref paths
#+begin_src clojure
"git/hooks"
#+end_src
