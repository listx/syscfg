#!/usr/bin/env zsh

local for_prompt=$1

gsts_print()
{
	if [[ $for_prompt == for_prompt ]]; then
		print -n $1
	else
		print -nP $1
	fi
}

gsts_hash()
{
	local g_hash=$(git rev-parse --short HEAD)
	gsts_print "$g_hash"
}

gsts_ref()
{
	local g_ref=$(git rev-parse --abbrev-ref HEAD)
	if [[ $g_ref == HEAD ]]; then
		g_ref=" $(git rev-parse HEAD)"
	fi
	gsts_print "$g_ref"
}

# Adapted from http://www.zsh.org/mla/users/2016/msg00664.html.
gsts_upstream_divergence() {
	git rev-parse @{upstream} >/dev/null 2>&1 || return
	local -a x
	x=( $(git rev-list --left-right --count HEAD...@{upstream}) )
	if (( x[1] )) || (( x[2] )); then
		if (( x[1] )); then
			gsts_print "%B%F{green}\u25b2%b%f"
		fi
		if (( x[2] )); then
			gsts_print "%B%F{red}\u25bc%b%f"
		fi
	else
		gsts_print "%B%F{default}\u25cf%b%f"
	fi
}

gsts_bare()
{
	local g_ref=$(gsts_ref)
	local g_hash=$(gsts_hash)
	gsts_print "<bare>:$g_hash:$g_ref"
}

gsts_nonbare()
{
	local g_path=$(git rev-parse --show-toplevel)

	local g_ref=$(gsts_ref)
	local g_hash=$(gsts_hash)

	local g_diff=$(git diff)
	local g_diffc=$(git diff --cached)
	local g_changed="-"
	if [[ -n $g_diff && -n $g_diffc ]]; then
		g_changed="%B%F{208}X%b%f"
	elif [[ -n $g_diff ]]; then
		g_changed="%B%F{green}D%b%f"
	elif [[ -n $g_diffc ]]; then
		g_changed="%B%F{magenta}S%b%f"
	fi

	local g_untracked=$(git -C "$g_path" ls-files --other --exclude-standard \
		| wc -l)
	if (( $g_untracked == 0 )); then
		g_untracked="-"
	else
		if (( $g_untracked > 9 )); then
			g_untracked="!"
		fi
		g_untracked="%B%F{yellow}${g_untracked}%b%f"
	fi

	local g_stashed=$(git stash list | wc -l)
	if (( $g_stashed == 0 )); then
		g_stashed="-"
	else
		if (( $g_stashed > 9 )); then
			g_stashed="!"
		fi
		g_stashed="%B%F{196}${g_stashed}%b%f"
	fi

	local g_assume_unchanged=$(git -C "$g_path" ls-files -v | grep "^[[:lower:]]" | wc -l)
	if (( $g_assume_unchanged == 0 )); then
		g_assume_unchanged="-"
	else
		if (( $g_assume_unchanged > 9 )); then
			g_assume_unchanged="!"
		fi
		g_assume_unchanged="%B%F{201}$g_assume_unchanged%b%f"
	fi

	gsts_print "$g_hash:$g_changed$g_untracked$g_stashed$g_assume_unchanged"
	if [[ $g_ref[1] != ' ' ]]; then
		gsts_print ":$g_ref"
	fi
	gsts_upstream_divergence
}

! git_contents && return

if [[ $(git rev-parse --is-bare-repository) == true ]]; then
	gsts_bare
else
	gsts_nonbare
fi
