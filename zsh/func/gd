#!/usr/bin/env zsh

_gd()
{
	! git_contents && return

	local c_green="\x1b[1;32m"
	local c_magenta="\x1b[1;35m"
	local ce="\x1b[0m"

	local git_diff=$(git diff --color=always)
	local git_diff_c=$(git diff --cached --color=always)

	if [[ -z "$git_diff" && -z "$git_diff_c" ]]; then
		return 0
	fi

	local msg_diff=""
	local msg_diff_c=""
	if [[ -n "$git_diff" ]]; then
		# The sed '/^$/d' below is to remove the extra trailing whitespace
		# line that seems to get added into `git diff' but not `git diff
		# --cached'.
		msg_diff=$(vertical_label \
			"git diff --color=always | sed '/^$/d'" \
			"TREE ------------------------ " \
			"$c_green")
	fi

	if [[ -n "$git_diff_c" ]]; then
		msg_diff_c=$(vertical_label \
			"git diff --cached --color=always" \
			"INDEX ------------------------ " \
			"$c_magenta")
	fi

	if [[ -n "$git_diff" ]] && [[ -n "$git_diff_c" ]]; then
		# If we have two buffers to show, force less to pause before
		# showing the next one. We do this by unsetting the -F flag set in
		# ~/.lesskey.
		printf "$msg_diff" | less -+F
		printf "$msg_diff_c" | less
	elif [[ -n "$git_diff" ]]; then
		printf "$msg_diff" | less
	elif [[ -n "$git_diff_c" ]]; then
		printf "$msg_diff_c" | less
	fi
}

_gd_rs()
{
	local git_diff="$(command gd diff --width=${COLUMNS})"
	local git_diff_c="$(command gd diff --width=${COLUMNS} --staged)"

	if [[ -z "$git_diff" && -z "$git_diff_c" ]]; then
		return 0
	fi

	if [[ -n "$git_diff" ]] && [[ -n "$git_diff_c" ]]; then
		# If we have two buffers to show, force less to pause before
		# showing the next one. We do this by unsetting the -F flag set in
		# ~/.lesskey.
		printf "$git_diff" | less -+F
		printf "$git_diff_c" | less
	elif [[ -n "$git_diff" ]]; then
		printf "$git_diff" | less
	elif [[ -n "$git_diff_c" ]]; then
		printf "$git_diff_c" | less
	fi
}

gd()
{
	if whence -cp "gd" > /dev/null; then
		_gd_rs
	else
		_gd
	fi
}


gd
