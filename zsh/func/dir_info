#!/usr/bin/env zsh

# dir_info(), a function that acts as an intelligent "ls". This function is
# used by univ_open() to display directory contents, but can be used independently.

dir_info()
{
	local file_count
	local mode
	local deref
	local thing

	mode="${1:-}"

	# Add a blank line for legibility.
	echo

	# List the contents of the given argument, but use "." (current directory)
	# if this argument is blank. If we are given a specific thing to list, make
	# sure to dereference any symlinks.
	thing="${2:-.}"
	if [[ -n "${thing}" ]]; then
		# Resolve symlinks.
		if [[ -L "${thing}" ]]; then
			echo "  ${thing} -> $(readlink -f "${thing}")"
			echo "  ---"
			thing="$(readlink -f "${thing}")"
		fi
	fi

	# NOP if there is nothing to show.
	file_count=$(ls -A1 "${thing}" | wc -l)
	if (( file_count == 0 )); then
		echo "($PWD is empty)"
		echo
		return
	fi

	case "${mode}" in
	verbose-by-name)
		ls -Aho --time-style=long-iso --color ${thing} \
			| sed -e 's|^|  |'
		;;
	verbose-by-size)
		ls -AhoSr --time-style=long-iso --color ${thing} \
			| sed -e 's|^|  |'
		;;
	verbose-by-date)
		ls -Ahotr --time-style=long-iso --color ${thing} \
			| sed -e 's|^|  |'
		;;
	brief)
		ls -AC -w $((COLUMNS - 2)) --color ${thing} \
			| sed 's|^|  |'
		;;
	*)
		echo >&2 "unrecognized mode \`${mode}'"
		return 1
		;;
	esac

	# If this is a git root directory, then show a list of all remotes.
	if [[ -d .git ]]; then
		echo
		git remote -v
	fi

	# Add a blank line between us and the shell prompt for legibility.
	echo
}
