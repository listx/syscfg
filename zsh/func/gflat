#!/usr/bin/env zsh

# Shortcut for "git rebase -i HEAD~<N>" where <N> is a positive integer, and
# where "f" is used to flatten all commits up to the oldest (topmost in rebase
# buffer) commit.
gflat()
{
	if (( $# != 1 )); then
		printf "gflat: Need exactly 1 argument.\n"
		return 1
	# The odd-looking "<->" pattern is a zsh-ism tht checks to see that the
	# string only has digits [1].
	# [1]: https://www.zsh.org/mla/users/2007/msg00084.html
	elif [[ "$1" == <-> ]]; then
		# Strip any leading zeroes [1].
		# [1]: https://groups.google.com/d/msg/comp.unix.shell/VI8nIp1plWc/WOhfzd16ug8J
		n="${1#${1%%[!0]*}}"

		if (( n < 2 )); then
			printf "gflat: Numerical argument must be at least 2.\n"
			return 1
		fi

		arg=HEAD~"${n}"
	# The argument may be a commit-ish.
	else
		arg="$1"
	fi

	GIT_SEQUENCE_EDITOR="sed -i -e '2,\$s/^pick/f/'" git rebase -i "${arg}"
}
