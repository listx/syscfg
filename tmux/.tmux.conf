# Make TMUX modal. Adaptation of
# https://alexherbo2.github.io/config/tmux/make-tmux-modal/.
#
# By default we still re-use the existing C-b prefix key as-is. However, we can
# additionally enter a "sticky" prefix key mode with M-C-b.
bind-key -T root         C-M-b      set key-table prefix
bind-key                 q          set key-table root
bind-key -T prefix       C-H        swap-window -t -1\; select-window -t -1
bind-key -T prefix       C-L        swap-window -t +1\; select-window -t +1
bind-key -T prefix       h          previous-window
bind-key -T prefix       l          next-window
bind-key -T prefix       N          new-window
bind-key -T prefix       v          copy-mode
bind-key -T prefix       D          kill-window
bind-key -T prefix       Enter      set key-table root

# Reload config. C-b R (that's shift-R).
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Share copy-mode's buffer with system clipboard.
bind-key -T copy-mode-vi y          send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
bind-key -T copy-mode-vi v          send-keys -X begin-selection
bind-key -T copy-mode-vi Escape     send-keys -X clear-selection
bind-key -T copy-mode-vi BSpace     send-keys -X -N 10 cursor-up
bind-key -T copy-mode-vi Space      send-keys -X -N 10 cursor-down

# Move window left/right.
bind-key -T root         C-M-H      swap-window -t -1\; select-window -t -1
bind-key -T root         C-M-L      swap-window -t +1\; select-window -t +1

# Paste. This buffer is unique to tmux (used by tmux-thumbs) and is separate
# from X primary selection (Shift+Insert to paste) and the clipboard (C-p to
# paste via Alacritty bindings from the local system clipboard).
bind-key -T root         C-M-p      paste-buffer

# Disable mouse wheel in status bar. See https://superuser.com/a/1492302.
unbind-key -T root WheelUpStatus
unbind-key -T root WheelDownStatus

# Use 256 colors.
set -g default-terminal "tmux-256color"

# Set background color for status bar.
set -g status-bg colour16

# This sets the color for the name of the session (#{session_name}).
set -g status-left-style 'bg=colour51 fg=colour16 bold'

# Set window name to either the current path when at a shell prompt, or to the
# name of the executable when running it.
# See https://stackoverflow.com/a/68043814/437583.
set -g status-interval 1
set -gw automatic-rename on
# If the current command is zsh (our usual shell), then use the current path as
# the name. Otherwise just use the command name instead. When displaying a
# command, bold it so as to disambiguate it against similarly-named paths.
set -g automatic-rename-format "#[bold]#{?#{==:#{pane_current_command},zsh},#(~/syscfg/script/simplify_path.sh '#{pane_current_path}'),#{pane_current_command}#[default]}"

# Get rid of asterisks and dashes to denote the current frame. We use colors
# already so they are good enough. Granted, only using colors here would
# probably won't work well when inside a terminal without 256 color support, but
# that only happens so rarely that it's not worth optimizing for.
set -gw window-status-current-format "#{?#{==:#{pane_current_command},zsh},#[bg=colour178],#[bg=colour28]}#{?#{==:#{window_panes},1},, #(expr #{window_panes} - 1)}#{?#{==:#{pane_current_command},zsh},#[bg=colour226#,fg=colour16] #(~/syscfg/script/simplify_path.sh '#{pane_current_path}') ,#[bg=colour46] #W#[bg=colour46] }#[default]"
set -gw window-status-format "#{?#{==:#{pane_current_command},zsh},#[bg=colour178],#[bg=colour28]}#{?#{==:#{window_panes},1},, #(expr #{window_panes} - 1)}#{?#{==:#{pane_current_command},zsh},#[bg=colour144#,fg=colour16] #(~/syscfg/script/simplify_path.sh '#{pane_current_path}') ,#[bg=colour65] #W#[bg=colour65] }#[default]"

# Set colors for window titles in general.
set -gw window-status-style fg=colour16,bold,underscore

# Highlight current active window in the status bar. See
# https://unix.stackexchange.com/q/210174/72230.
set -gw window-status-current-style fg=colour16,bold

# Imitate emacs evil-mode's "<N>" and "<I>" modal signifiers to help
# distinguish between modes. When we're in "prefix mode", it is normal mode
# "<N>", where we can press any number of other keys without having to first
# press C-b (the prefix key). By default we start out in "insert" mode "<I>"
# which is when keys are passed through to the underlying application.
#
# "<V>" signifies copy-mode. We use "<V>" because copy-mode resembles Vim's
# visual selection mode.
set -g status-left ' #{session_name} #[bg=colour16] #[bg=colour46]#[#{?#{m/r:(copy|view)-mode,#{pane_mode} },fg=colour16#,bg=colour46,#{?#{==:#{client_key_table},root},fg=colour231#,bg=colour16,fg=colour16#,bg=colour226}}] <#{?#{m/r:(copy|view)-mode,#{pane_mode}},V,#{?#{==:#{client_key_table},root},I,N}}> #[bg=colour16,fg=colour231] -- '
set -g status-right '#[fg=colour231]#{host}'

# Set colors for copy-mode selections.
set -gw mode-style "fg=colour16 bg=colour46 bold"

# Don't set limits on status line portion lengths. This way, if either
# status-left or status-right gets too long, they don't get truncated by tmux.
set -g status-left-length 0
set -g status-right-length 0
# When detaching, change back the keymap to 'root', so that when we reattach,
# we start out with 'root' (<I>).
set-hook -g client-detached[0] 'set key-table root'

# Automatically renumber windows if one is closed, so that there are no "gaps"
# in between. See https://unix.stackexchange.com/a/51879/72230.
set -g renumber-windows on

# Allow binding of mouse events as keys. As a side effect, this also changes
# the behavior of the mouse wheel from scrolling through the command history to
# scrolling back into the buffer (copy-mode).
set -gw mouse on

# Increase history to 100K lines.
set -g history-limit 100000

# Do not lag after ESC key is pressed.
set -s escape-time 0

# Vi mode (this enables copy-mode-vi bindings in copy-mode; see "tmux
# list-keys").
set -gw mode-keys vi

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'fcsonline/tmux-thumbs'
	# Get initial hints closer to the cursor (instead of starting hints from the
	# top of the buffer).
	set -g @thumbs-position off_left
	# Don't show duplicated hints for the same match.
	set -g @thumbs-unique enabled
	# Reverse the order of assigned hints. Useful to get shorter hints closer to
	# the cursor.
	set -g @thumbs-reverse enabled
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
